<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="today.meevote.domain.notify.dao.NotifyDao">

    <select id="getUnreadNotifyCount">
        SELECT COUNT(*)
        FROM notify
        WHERE
            email = #{email}
          AND is_read = 0
    </select>

    <select id="getNotifyList">
        SELECT
            n.notify_id,
            n.notify_category_id,
            nc.category_name as notifyCategoryName,
            n.message,
            n.is_read,
            n.schedule_id,
            s.name,
            sc.category_name as scheduleCategoryName,
            sc.color,
            s.start_date,
            s.end_date,
            s.is_group,
            s.vote_deadline,
            sp.place_name
        FROM
            notify n
            JOIN notify_category nc ON n.notify_category_id = nc.notify_category_id
            JOIN schedule s ON n.schedule_id = s.schedule_id
            JOIN schedule_category sc ON s.schedule_category_id = sc.schedule_category_id
            LEFT JOIN schedule_place sp ON n.schedule_id = sp.schedule_id
        WHERE
            n.email = #{email}
            AND n.is_read = 0
        ORDER BY n.is_read ASC, n.notify_id DESC
    </select>

    <update id="updateIsRead">
        UPDATE notify
        SET
            is_read = #{isRead}
        WHERE
            notify_id = #{notifyId}
    </update>

    <select id="isExistNotify">
        SELECT COUNT(*)
        FROM notify
        WHERE
            notify_id= #{notifyId}
            AND email = #{email}
    </select>

    <select id="getEmailByNotifyId">
        select email
        from notify
        where notify_id = #{notifyId}
    </select>

    <insert id="createAllInviteNotify">
        INSERT INTO notify (notify_id, email, schedule_id, notify_category_id, message, is_read)
        SELECT seq_notify.NEXTVAL, m.email, ms.schedule_id, 1, '모임 일정에 초대되었습니다. 장소 투표를 시작하세요.', 0
        FROM member m JOIN member_schedule ms ON m.email = ms.email
        WHERE
            ms.schedule_id = #{scheduleId}
            AND ms.is_owner = 0
    </insert>

    <insert id="createAllConfirmNotify">
        INSERT INTO notify (notify_id, email, schedule_id, notify_category_id, message, is_read)
        SELECT seq_notify.NEXTVAL, m.email, ms.schedule_id, 2, '모임 일정 장소가 확정되었습니다.', 0
        FROM member m JOIN member_schedule ms ON m.email = ms.email
        WHERE
            ms.schedule_id = #{scheduleId}
            AND ms.is_owner = 0
    </insert>

    <update id="updateAllIsRead">
        UPDATE notify
        SET
            is_read = #{isRead}
        WHERE
            email = #{email}
    </update>
</mapper>